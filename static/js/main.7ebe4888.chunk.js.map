{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/AppRouter.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","data","console","log","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachementUrl","toggleEditing","update","autoFocus","attachmentUrl","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","key","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","currentUser","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4SAeAA,gBAVuB,CACrBC,OAAQC,0CACRC,WAAYD,iCACZE,YAAaF,wCACbG,UAAWH,iBACXI,cAAeJ,6BACfK,kBAAmBL,cACnBM,MAAON,8CAKF,IAAMO,EAAmBT,EAEnBU,EAAcV,SACdW,EAAYX,cACZY,EAAiBZ,YCoCfa,EApDE,WAAO,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,OAEWF,mBAAS,IAFpB,mBAEdG,EAFc,KAEJC,EAFI,OAGeJ,oBAAS,GAHxB,mBAGdK,EAHc,KAGFC,EAHE,OAIKN,mBAAS,IAJd,mBAIdO,EAJc,KAIPC,EAJO,KAMfC,EAAW,SAACC,GAAW,IAAD,EACSA,EAA3BC,OAAUC,EADQ,EACRA,KAAMC,EADE,EACFA,MAEV,UAATD,EACHV,EAASW,GACS,aAATD,GACTR,EAAYS,IAIVC,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACfL,EAAMM,iBADS,UAGTX,EAHS,gCAILT,EAAYqB,+BAA+BhB,EAAOE,GAJ7C,6CAMLP,EAAYsB,2BAA2BjB,EAAOE,GANzC,yDASbK,EAAS,KAAMW,SATF,0DAAH,sDAed,OACE,oCACE,0BAAML,SAAUA,EAAUM,UAAU,aAClC,2BAAOR,KAAK,QAAQS,KAAK,OAAOC,YAAY,QAAQC,UAAQ,EAACV,MAAOZ,EAAOQ,SAAUA,EAC3EW,UAAU,cAEpB,2BAAOR,KAAK,WAAWS,KAAK,WAAWC,YAAY,WAAWC,UAAQ,EAACV,MAAOV,EAAUM,SAAUA,EACxFW,UAAU,cAEpB,2BAAOC,KAAK,SAASR,MAAOR,EAAa,iBAAmB,SAClDe,UAAU,yBAEnBb,GAAS,0BAAMa,UAAU,aAAab,IAEzC,0BAAMiB,QAhBY,kBAAMlB,GAAc,SAAAmB,GAAI,OAAKA,MAgBjBL,UAAU,cACrCf,EAAa,UAAY,oBCNnBqB,EAnCF,WAEX,IAAMC,EAAa,uCAAG,WAAOjB,GAAP,mBAAAK,EAAA,4DAIP,YAHKH,EAAUF,EAApBC,OAAUC,MAIhBgB,EAAW,IAAIjC,EAAiBkC,KAAKC,mBACnB,WAATlB,IACTgB,EAAW,IAAIjC,EAAiBkC,KAAKE,oBAPnB,SAUDnC,EAAYoC,gBAAgBJ,GAV3B,OAUdK,EAVc,OAWpBC,QAAQC,IAAIF,GAXQ,2CAAH,sDAcnB,OACE,yBAAKb,UAAU,iBACb,kBAAC,IAAD,CACEgB,KAAMC,IACNC,MAAO,UACPC,KAAK,KACLC,MAAO,CAAEC,aAAc,MAEzB,kBAAC,EAAD,MACA,yBAAKrB,UAAU,YACb,4BAAQI,QAASG,EAAef,KAAK,SAASQ,UAAU,WAAxD,wBACuB,kBAAC,IAAD,CAAiBgB,KAAMM,OAC9C,4BAAQlB,QAASG,EAAef,KAAK,SAASQ,UAAU,WAAxD,wBACuB,kBAAC,IAAD,CAAiBgB,KAAMO,U,gBCiCvCC,EAnED,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAAc,EACT9C,oBAAS,GADA,mBAChC+C,EADgC,KACvBC,EADuB,OAEPhD,mBAAS6C,EAASI,MAFX,mBAEhCC,EAFgC,KAEtBC,EAFsB,KAIjCC,EAAa,uCAAG,sBAAArC,EAAA,0DACTsC,OAAOC,QAAQ,+CADN,gCAKZzD,EAAU0D,IAAV,iBAAwBV,EAASW,KAAMC,SAL3B,uBAMZ3D,EAAe4D,WAAWb,EAASc,gBAAgBF,SANvC,2CAAH,qDAUbG,EAAgB,kBAAMZ,GAAW,SAAAvB,GAAI,OAAKA,MAE1CX,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,6DACfL,EAAMM,iBADS,SAGTnB,EAAU0D,IAAV,iBAAwBV,EAASW,KAAMK,OAAO,CAClDZ,KAAMC,IAJO,OAMfF,GAAW,GANI,2CAAH,sDAYd,OACE,yBAAK5B,UAAU,SAEX2B,GAAWD,EACX,oCACA,0BAAMhC,SAAUA,EAAUM,UAAU,uBAClC,2BAAOP,MAAOqC,EACZ5B,YAAY,kBACZC,UAAQ,EACRuC,WAAS,EACTrD,SAdO,SAACC,GAAW,IACXG,EAAUH,EAAnBC,OAASE,MAChBsC,EAAYtC,IAaJO,UAAU,cAEZ,2BAAOC,KAAK,SAASR,MAAM,eAAeO,UAAU,aAEtD,0BAAMI,QAASoC,EAAexC,UAAU,qBAAxC,WAKC,oCACA,4BAAKyB,EAASI,MACbJ,EAASkB,eAAiB,yBAAKC,IAAKnB,EAASkB,gBAC7CjB,GACE,yBAAKmB,MAAM,kBACT,0BAAMzC,QAAS4B,GACb,kBAAC,IAAD,CAAiBhB,KAAM8B,OAEzB,0BAAM1C,QAASoC,GACb,kBAAC,IAAD,CAAiBxB,KAAM+B,W,QCgCxBC,EAxFM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAAa,EACRrE,mBAAS,IADD,mBAC3BsE,EAD2B,KACpBC,EADoB,OAEEvE,mBAAS,IAFX,mBAE3BwE,EAF2B,KAEfC,EAFe,KAI5B3D,EAAQ,uCAAG,WAAOJ,GAAP,qBAAAK,EAAA,yDACfL,EAAMM,iBACF+C,EAAgB,IAChBS,EAHW,wBAIPE,EAAgB5E,EAAe6E,MAAMC,MAArB,UAA8BP,EAAQQ,IAAtC,YAA6CC,gBAJtD,SAKUJ,EAAcK,UAAUP,EAAY,YAL9C,cAKPQ,EALO,gBAMSA,EAASL,IAAIM,iBANtB,OAMblB,EANa,sBAQTlB,EAAW,CACfI,KAAMqB,EACNY,UAAWC,KAAKC,MAChBC,UAAWhB,EAAQQ,IACnBd,iBAZa,UAcTlE,EAAUyF,WAAW,UAAUC,IAAI1C,GAd1B,QAef0B,EAAS,IACTE,EAAc,IAhBC,4CAAH,sDAwCd,OAEE,0BAAM3D,SAAUA,EAAUM,UAAU,eAClC,yBAAKA,UAAU,2BACb,2BACEA,UAAU,sBACVP,MAAOyD,EACP7D,SA5BS,SAACC,GAAW,IAEhBG,EACPH,EADFC,OAASE,MAEX0D,EAAS1D,IAyBHQ,KAAK,OACLC,YAAY,uBACZkE,UAAW,MAEb,2BAAOnE,KAAK,SAASR,MAAM,SAASO,UAAU,yBAEhD,2BAAOqE,IAAI,cAAcrE,UAAU,uBACjC,4CACA,kBAAC,IAAD,CAAiBgB,KAAMsD,OAEzB,2BAAQlC,GAAG,cACTnC,KAAK,OACLsE,OAAO,UACPlF,SAnCe,SAACC,GAAW,IAEzBkF,EADuBlF,EAArBC,OAAUkF,MACI,GAEhBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAAmB,IACbC,EAAYD,EAA7BE,cAAiBD,OACxBzB,EAAcyB,IAEhBJ,EAAOM,cAAcR,IA2BjBpD,MAAO,CACL6D,QAAS,KAEb,2BAAOhF,KAAK,SAASR,MAAM,UACzB2D,GACE,yBAAKpD,UAAU,2BACb,yBACE4C,IAAKQ,EACLhC,MAAO,CACL8D,gBAAiB9B,KAGrB,yBAAKpD,UAAU,qBAAqBI,QApCpB,kBAAMiD,EAAc,MAqClC,wCACA,kBAAC,IAAD,CAAiBrC,KAAMmE,UC5CtBC,EArCF,SAAC,GAAiB,IAAfnC,EAAc,EAAdA,QAAc,EACArE,mBAAS,IADT,mBACrByG,EADqB,KACbC,EADa,KAwB5B,OAVAC,qBAAU,WAER9G,EAAUyF,WAAW,UAAUsB,YAAW,SAAAC,GACxC,IAAMC,EAAaD,EAASE,KAAKC,KAAI,SAAAzD,GAAG,oBACpCC,GAAID,EAAIC,IAAOD,EAAItB,WAErByE,EAAUI,QAEb,IAGH,yBAAK1F,UAAU,aACb,kBAAC,EAAD,CAAciD,QAASA,IACvB,yBAAK7B,MAAO,CAAEyE,UAAW,KAErBR,EAAOO,KAAI,SAAC1C,GAAD,OACT,kBAAC,EAAD,CAAO4C,IAAK5C,EAAMd,GAAIX,SAAUyB,EAAOxB,QAASwB,EAAMe,YAAchB,EAAQQ,YC/BvE,cAA6B,IAA3BsC,EAA0B,EAA1BA,YAAa9C,EAAa,EAAbA,QACtB+C,EAAUC,cADyB,EAEGrH,mBAASqE,EAAQiD,aAFpB,mBAElCC,EAFkC,KAElBC,EAFkB,KASnCC,EAAW,uCAAG,sBAAA1G,EAAA,sEACGlB,EAAUyF,WAAW,UACvCoC,MAAM,YAAa,KAAMrD,EAAQQ,KACjC8C,QAAQ,aACRC,MAJe,yDAAH,qDAQjBjB,qBAAU,WACRc,MACC,IAEH,IAKM3G,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACfL,EAAMM,iBAEHqD,EAAQiD,cAAgBC,EAHZ,gCAIPlD,EAAQwD,cAAc,CAC1BP,YAAaC,IALF,OAObJ,IAPa,2CAAH,sDAWd,OACE,yBAAK/F,UAAU,aACb,0BAAMN,SAAUA,EAAUM,UAAU,eACpC,2BAAOC,KAAK,OACZC,YAAY,eACZwC,WAAS,EACTrD,SAtBa,SAACC,GAAW,IACTG,EAAUH,EAApBC,OAAUE,MAClB2G,EAAkB3G,IAqBhBA,MAAO0G,EACPnG,UAAU,cAEV,2BACIC,KAAK,SACLR,MAAM,iBACNO,UAAU,UACVoB,MAAO,CACLyE,UAAW,OAInB,0BAAM7F,UAAU,2BAA2BI,QApDvB,WACpB5B,EAAYkI,UACZV,EAAQW,KAAK,OAkDb,aC1BWC,EA5BI,SAAC,GAAD,IAAE3D,EAAF,EAAEA,QAAF,OAAe,6BAChC,wBAAI7B,MAAO,CAAEyF,QAAS,OAAQC,eAAgB,SAAUjB,UAAW,KACjE,4BACI,kBAAC,IAAD,CAAMkB,GAAG,IAAI3F,MAAO,CAAE4F,YAAa,KACjC,kBAAC,IAAD,CAAiBhG,KAAMC,IAAWC,MAAO,UAAWC,KAAK,SAG/D,4BACE,kBAAC,IAAD,CACI4F,GAAG,WACH3F,MAAO,CACL6F,WAAY,GACZJ,QAAS,OACTK,cAAe,SACfC,WAAY,SACZC,SAAU,KAGZ,kBAAC,IAAD,CAAiBpG,KAAMqG,IAAQnG,MAAO,UAAWC,KAAK,OACtD,0BAAMC,MAAO,CAAEyE,UAAW,KACvB5C,GAAWA,EAAQiD,YAAnB,UACMjD,EAAQiD,YADd,kBAEG,gBCcDoB,EAnCG,SAAC,GAAyC,IAAxCvB,EAAuC,EAAvCA,YAAawB,EAA0B,EAA1BA,WAAYtE,EAAc,EAAdA,QAC3C,OACE,kBAAC,IAAD,KACGsE,GAAc,kBAAC,EAAD,CAAYtE,QAASA,IACpC,kBAAC,IAAD,KACGsE,EACA,yBACAnG,MAAO,CACLoG,SAAU,IACVC,MAAO,OACPC,OAAQ,SACR7B,UAAW,GACXgB,QAAS,OACTC,eAAgB,WAGjB,kBAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,CAAM3E,QAASA,GAAf,MAEF,kBAAC,IAAD,CAAO0E,OAAK,EAACC,KAAK,YAChB,kBAACC,EAAD,CAAS5E,QAASA,EAAS8C,YAAaA,MAI5C,oCACA,kBAAC,IAAD,CAAO4B,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,WCUKE,MAvCf,WAAgB,IAAD,EACWlJ,oBAAS,GADpB,mBACNmJ,EADM,KACAC,EADA,OAEyBpJ,mBAASJ,EAAYyJ,aAF9C,mBAELV,EAFK,KAEOW,EAFP,OAGiBtJ,mBAAS,MAH1B,mBAGNqE,EAHM,KAGGkF,EAHH,KA+Bb,OA1BA5C,qBAAU,WACR/G,EAAY4J,oBAAmB,SAACC,GAC1BA,GACFH,GAAc,GACdC,EAAW,CACTjC,YAAamC,EAAKnC,YAClBzC,IAAK4E,EAAK5E,IACVgD,cAAe,SAAC6B,GAAD,OAAUD,EAAK5B,cAAc6B,QAG9CH,EAAW,MACXD,GAAc,IAEhBF,GAAQ,QAET,IAYD,6BACID,EAAO,kBAAC,EAAD,CAAWhC,YAXJ,WAClB,IAAMsC,EAAO7J,EAAYyJ,YACzBE,EAAW,CACTjC,YAAamC,EAAKnC,YAClBzC,IAAK4E,EAAK5E,IACVgD,cAAe,SAAC6B,GAAD,OAAUD,EAAK5B,cAAc6B,OAMEf,WAAYA,EAAYtE,QAASA,IAAc,kBAC7F,yCAAgB,IAAIc,MAAOwE,cAA3B,qB,MCjCNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.7ebe4888.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import React, {useState} from 'react';\nimport { authService } from '../fbase';\n\nconst inputStyles = {};\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const { target: { name, value }} = event;\n    \n    if ( name === \"email\" ) {\n      setEmail(value);\n    } else if (name === \"password\" ) {\n      setPassword(value);\n    }\n  }\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      if (newAccount) {\n        await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  }\n\n  const toggleAccount = () => setNewAccount(prev => !prev);\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={onChange} \n                  className=\"authInput\"\n                  />\n        <input name=\"password\" type=\"password\" placeholder=\"password\" required value={password} onChange={onChange} \n                  className=\"authInput\"\n                  />\n        <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} \n                  className=\"authInput authSubmit\"\n                  />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>  \n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  )\n}\n\nexport default AuthForm;","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, firebaseInstance } from \"../fbase\";\nimport AuthForm from \"../components/AuthForm\";\n\nconst Auth = () => {\n\n  const onSocialClick = async (event) => {\n    const { target: { name }} = event;\n    \n    let provider;\n    if (name === 'google') {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === 'github') {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n\n    const data = await authService.signInWithPopup(provider);\n    console.log(data);\n  }\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} /></button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} /></button>\n      </div>\n    </div>\n  )\n}\n\nexport default Auth;","import React, {useState} from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { dbService, storageService } from '../fbase';\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n\n    if (ok) {\n      //delete nweet\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachementUrl).delete();\n    }\n  }\n\n  const toggleEditing = () => setEditing(prev => !prev);\n  \n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet\n    });\n    setEditing(false);\n  }\n  const onChange = (event) => {\n    const {target: {value}} = event;\n    setNewNweet(value);\n  }\n  return (\n    <div className=\"nweet\">\n      {\n        editing && isOwner ? \n        <>\n        <form onSubmit={onSubmit} className=\"container nweetEdit\">\n          <input value={newNweet} \n            placeholder=\"Edit your nweet\" \n            required \n            autoFocus\n            onChange={onChange}\n            className=\"formInput\"\n          /> \n          <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n        </form> \n        <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n        </span>\n        </>\n        :\n         <>\n         <h4>{nweetObj.text}</h4>\n         {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n         {isOwner && (\n            <div class=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n         </>\n      }\n  </div>\n  );\n};\n\nexport default Nweet;","import React, {useState} from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { dbService, storageService } from '../fbase';\n\nconst NweetFactory = ({userObj}) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment) {\n      const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl\n    };\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: {value},\n    } = event;\n    setNweet(value);\n  };\n\n  const onFileChange = (event) => {\n    const { target: { files }} = event;\n    const theFile = files[0];\n\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {currentTarget: { result }} = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  }\n\n  const onClearAttachment = () => setAttachment(\"\");\n\n  return (\n    \n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input  id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }} />\n      <input type=\"submit\" value=\"Nweet\" />\n      { attachment && (\n          <div className=\"factoryForm__attachment\">\n            <img\n              src={attachment}\n              style={{\n                backgroundImage: attachment,\n              }}\n            />\n            <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n              <span>Remove</span>\n              <FontAwesomeIcon icon={faTimes} />\n            </div>\n        </div>\n      )}\n    </form>\n  )\n}\n\nexport default NweetFactory;","import React, { useState, useEffect} from \"react\";\nimport Nweet from \"../components/Nweet\";\nimport NweetFactory from \"../components/NweetFactory\";\nimport { dbService, storageService } from \"../fbase\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  // const getNweets = async () => {\n  //   const dbNweets = await dbService.collection(\"nweets\").get();\n  //   dbNweets.forEach(document => {\n  //     const nweetObject = {\n  //       ...document.data(),\n  //       id: document.id,\n  //     }\n  //     setNweets(prev => [nweetObject, ...prev]);\n  //   });\n  // }\n\n  useEffect(() => {\n    // getNweets();\n    dbService.collection(\"nweets\").onSnapshot(snapshot => {\n      const nweetArray = snapshot.docs.map(doc => ( \n        { id: doc.id, ...doc.data()} \n        ));\n        setNweets(nweetArray);\n    });\n  }, []);\n\n  return (\n  <div className=\"container\">\n    <NweetFactory userObj={userObj} />\n    <div style={{ marginTop: 30 }}>\n      {\n        nweets.map((nweet) => (\n          <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\n        ))\n      }\n    </div>\n  </div>);  \n}\n\nexport default Home;","import React, {useEffect, useState} from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { authService, dbService } from \"../fbase\";\n\nexport default ({refreshUser, userObj}) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const getMyNweets = async () => {\n    const nweets = await dbService.collection(\"nweets\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\")\n      .get();\n      \n  };\n\n  useEffect(() => {\n    getMyNweets();\n  }, []);\n\n  const onChange = (event) => {\n    const { target : {value}} = event;\n    setNewDisplayName(value);\n  }\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    if(userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n      <input type=\"text\" \n      placeholder=\"Display name\"\n      autoFocus \n      onChange={onChange}\n      value={newDisplayName}\n      className=\"formInput\" \n      />\n      <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n    </form>\n    <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  )\n}","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({userObj}) => <nav>\n  <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n    <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n    </li>   \n    <li>\n      <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj && userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>   \n  </ul>  \n</nav>\nexport default Navigation;","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Profile from \"../routes/Profile\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? \n         <div\n         style={{\n           maxWidth: 890,\n           width: \"100%\",\n           margin: \"0 auto\",\n           marginTop: 80,\n           display: \"flex\",\n           justifyContent: \"center\",\n         }}\n        >\n          <Route exact path=\"/\">\n            <Home userObj={userObj}> </Home>\n          </Route>\n          <Route exact path=\"/profile\">\n            <Profile userObj={userObj} refreshUser={refreshUser} />\n          </Route>\n          {/* <Redirect from=\"*\" to=\"/\" /> */}\n        </div> : \n        <>\n        <Route exact path=\"/\">\n          <Auth />\n        </Route> \n        {/* <Redirect from=\"*\" to=\"/\" /> */}\n        </>}\n      </Switch>\n    </Router>\n  )\n}\n\nexport default AppRouter;","import React, {useState, useEffect} from \"react\";\nimport AppRouter from './AppRouter';\nimport { authService } from \"../fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [ isLoggedIn, setIsLoggedIn ] = useState(authService.currentUser);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    })\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n\n  return (\n    <div>\n      { init ? <AppRouter refreshUser={refreshUser} isLoggedIn={isLoggedIn} userObj={userObj} /> : \"initializing...\"} \n      <footer>&copy; {new Date().getFullYear()} Clone Ntwitter</footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}